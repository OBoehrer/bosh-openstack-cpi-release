---
custom:
  timeouts:
    long: &timeouts-long 2h
  build_log_retention:
    builds: &build_logs_to_retain 500
  debug_bats: &debug_bats true

jobs:
  - name: build-candidate
    serial: true
    build_log_retention:
      builds: *build_logs_to_retain
    plan:
    - in_parallel:
      - {trigger: true,  get: bosh-cpi-src-in, timeout: *timeouts-long}
      - {trigger: false, get: version-semver, params: {bump: patch}, timeout: *timeouts-long}

    - put: version-semver
      timeout: *timeouts-long
      params: {file: version-semver/number}

    - task: build
      tags: ((worker_tags))
      timeout: *timeouts-long
      file: bosh-cpi-src-in/ci/tasks/build-candidate.yml

    - put: bosh-cpi-dev-artifacts
      timeout: *timeouts-long
      params: {file: candidate/*.tgz}

  - name: lifecycle
    serial: true
    serial_groups: [cleanup-lock-lifecycle]
    build_log_retention:
      builds: *build_logs_to_retain
    plan:
    - in_parallel:
      - {trigger: true, passed: [build-candidate], get: bosh-cpi-dev-artifacts, timeout: *timeouts-long}
      - {trigger: false, passed: [build-candidate], get: bosh-cpi-src-in, timeout: *timeouts-long}
      - {trigger: false, get: openstack-lifecycle-stemcell, resource: openstack-ubuntu-xenial-stemcell, timeout: *timeouts-long}

    - task: write_ca_file
      tags: ((worker_tags))
      file: bosh-cpi-src-in/ci/tasks/write-ca-file.yml
      params:
        file_content: ((bosh_openstack_ca_cert))

    - put: terraform-cpi
      tags: ((worker_tags))
      timeout: *timeouts-long
      params:
        env_name: lifecycle
        terraform_source: bosh-cpi-src-in/ci/terraform/ci/lifecycle
        vars: &lifecycle-terraform-vars
          prefix: lifecycle
          auth_url: ((openstack_auth_url_v3))
          cacert_file: ((tf_ca_file_path))
          user_name: ((lifecycle_openstack_username_v3))
          password: ((lifecycle_openstack_api_key_v3))
          domain_name: ((lifecycle_openstack_domain))
          project_name: ((lifecycle_openstack_project))
          ext_net_id: ((tf_external_network_id))
          ext_net_name: ((tf_external_network_name))
          region_name: ((tf_region_name))
          openstack_default_key_public_key: ((tf_default_public_key))
          dns_nameservers: ((tf_dns_nameservers))
          use_lbaas: ((lifecycle_use_lbaas))
    - do:
      - task: test
        tags: ((worker_tags))
        timeout: *timeouts-long
        file: bosh-cpi-src-in/ci/tasks/run-lifecycle.yml
        params:
          BOSH_OPENSTACK_DOMAIN:                   ((lifecycle_openstack_domain))
          BOSH_OPENSTACK_PROJECT:                  ((lifecycle_openstack_project))
          BOSH_OPENSTACK_TENANT:                   ((lifecycle_openstack_tenant))
          BOSH_OPENSTACK_USERNAME_V2:              ((lifecycle_openstack_username_v2))
          BOSH_OPENSTACK_AUTH_URL_V3:              ((openstack_auth_url_v3))
          BOSH_OPENSTACK_USERNAME_V3:              ((lifecycle_openstack_username_v3))
          BOSH_OPENSTACK_API_KEY_V3:               ((lifecycle_openstack_api_key_v3))
          BOSH_CLI_SILENCE_SLOW_LOAD_WARNING:      true
          BOSH_OPENSTACK_VOLUME_TYPE:              ((lifecycle_openstack_volume_type))
          BOSH_OPENSTACK_CONNECT_TIMEOUT:          "600"
          BOSH_OPENSTACK_READ_TIMEOUT:             "120"
          BOSH_OPENSTACK_WRITE_TIMEOUT:            "120"
          BOSH_OPENSTACK_CA_CERT:                  ((bosh_openstack_ca_cert))
          BOSH_OPENSTACK_FLAVOR_WITH_NO_ROOT_DISK: ((openstack_flavor_with_no_root_disk))
          BOSH_OPENSTACK_AVAILABILITY_ZONE:        ((availability_zone))
          BOSH_OPENSTACK_EXCLUDE_CINDER_V1:        ((lifecycle_exclude_cinder_v1))
      - put: lifecycle-log
        tags: ((worker_tags))
        timeout: *timeouts-long
        params: {file: output/lifecycle.log}
      ensure:
        put: terraform-cpi
        tags: ((worker_tags))
        params:
          action: destroy
          env_name: lifecycle
          terraform_source: bosh-cpi-src-in/ci/terraform/ci/lifecycle
          vars: *lifecycle-terraform-vars
        get_params:
          action: destroy

  - name: bats-ubuntu-manual
    serial: true
    serial_groups: [cleanup-lock-bats-ubuntu-manual]
    build_log_retention:
      builds: *build_logs_to_retain
    plan:
    - in_parallel:
      - {trigger: true,  passed: [build-candidate], get: bosh-cpi-dev-artifacts, timeout: *timeouts-long}
      - {trigger: false, passed: [build-candidate], get: version-semver, timeout: *timeouts-long}
      - {trigger: false, passed: [build-candidate], get: bosh-cpi-src-in, timeout: *timeouts-long}
      - {trigger: false,                    get: bosh-release, timeout: *timeouts-long}
      - {trigger: true,                    get: stemcell-director, resource: openstack-ubuntu-xenial-stemcell, timeout: *timeouts-long}
      - {trigger: false,                    get: stemcell, resource: openstack-ubuntu-xenial-stemcell, timeout: *timeouts-long}
      - {trigger: false,                    get: bats, timeout: *timeouts-long}
      - {trigger: false,                    get: bosh-deployment, timeout: *timeouts-long}

    - put: terraform-cpi
      tags: ((worker_tags))
      timeout: *timeouts-long
      params:
        env_name: bats-ubuntu-manual
        terraform_source: bosh-cpi-src-in/ci/terraform/ci/bats-manual
        vars: &bats-terraform-vars
          prefix: "bats-ubuntu-manual"
          auth_url: ((openstack_auth_url_v3))
          domain_name: ((openstack_domain))
          user_name: ((openstack_username))
          password: ((openstack_api_key))
          project_name: ((openstack_project))
          cacert_file: ((tf_ca_file_path))
          region_name: ((tf_region_name))
          primary_net_name: "bats-ubuntu-manual-primary"
          primary_net_cidr: "10.0.4.0/24"
          primary_net_allocation_pool_start: "10.0.4.200"
          primary_net_allocation_pool_end: "10.0.4.254"
          secondary_net_name: "bats-ubuntu-manual-secondary"
          secondary_net_cidr: "10.0.5.0/24"
          secondary_net_allocation_pool_start: "10.0.5.200"
          secondary_net_allocation_pool_end: "10.0.5.254"
          ext_net_name: ((tf_external_network_name))
          ext_net_id: ((tf_external_network_id))
          ext_net_cidr: ((tf_ext_net_cidr))
          dns_nameservers: ((tf_dns_nameservers))
          concourse_external_network_cidr: ((tf_concourse_external_network_cidr))
          openstack_default_key_public_key: ((tf_default_public_key))

    - do:
      - task: deploy
        tags: ((worker_tags))
        timeout: *timeouts-long
        file: bosh-cpi-src-in/ci/tasks/deploy-manual-networking.yml
        params:
          bosh_vcap_password:                   ((bosh_vcap_password))
          openstack_flavor:                     "m1.small"
          openstack_connection_timeout:         "600"
          openstack_read_timeout:               "180"
          openstack_write_timeout:              "180"
          openstack_state_timeout:              "900"
          openstack_auth_url:                   ((openstack_auth_url_v3))
          openstack_username:                   ((openstack_username))
          openstack_api_key:                    ((openstack_api_key))
          openstack_domain:                     ((openstack_domain))
          distro:                               "ubuntu"
          availability_zone:                    ((availability_zone))
          DEBUG_BATS:                           *debug_bats

      - task: test
        tags: ((worker_tags))
        timeout: *timeouts-long
        file: bosh-cpi-src-in/ci/tasks/run-manual-networking-bats.yml
        params:
          stemcell_name:                            "bosh-openstack-kvm-ubuntu-xenial-go_agent"
          private_key_data:                         ((bosh_private_key))
          openstack_flavor_with_ephemeral_disk:     ((openstack_flavor_with_ephemeral_disk))
          openstack_flavor_with_no_ephemeral_disk:  ((openstack_flavor_with_no_ephemeral_disk))
          bosh_vcap_password:                       ((bosh_vcap_password))
          availability_zone:                        ((availability_zone))
          DEBUG_BATS:                               *debug_bats
          bats_rspec_tags:                          "--tag ~ssh"
        ensure:
          task: print-task-errors
          tags: ((worker_tags))
          timeout: *timeouts-long
          file: bosh-cpi-src-in/ci/tasks/print_task_errors.yml
      ensure:
        do:
        - task: teardown-director
          tags: ((worker_tags))
          timeout: *timeouts-long
          file: bosh-cpi-src-in/ci/tasks/teardown-director.yml
          ensure:
            put: terraform-cpi
            tags: ((worker_tags))
            params:
              action: destroy
              env_name: bats-ubuntu-manual
              terraform_source: bosh-cpi-src-in/ci/terraform/ci/bats-manual
              vars: *bats-terraform-vars
            get_params:
              action: destroy

  - name: promote-candidate
    serial: true
    build_log_retention:
      builds: *build_logs_to_retain
    plan:
      - in_parallel:
        - {trigger: false, passed: [lifecycle, bats-ubuntu-manual], get: bosh-cpi-dev-artifacts, timeout: *timeouts-long}
        - {trigger: false, passed: [lifecycle, bats-ubuntu-manual], get: bosh-cpi-src-in, timeout: *timeouts-long}
        - {trigger: false, get: release-version-semver, params: {bump: major}, timeout: *timeouts-long}

      - task: promote
        tags: ((worker_tags))
        timeout: *timeouts-long
        file: bosh-cpi-src-in/ci/tasks/promote-candidate.yml
        params:
          aws_access_key_id: ((s3_openstack_cpi_blobs_access_key))
          aws_secret_access_key: ((s3_openstack_cpi_blobs_secret_key))

      - put: release-version-semver
        timeout: *timeouts-long
        params: {file: release-version-semver/number}

      - put: bosh-cpi-src-out
        timeout: *timeouts-long
        params: {repository: promote/repo, rebase: true, tag: promote/integer_version, tag_prefix: "v"}

resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      username: ((docker.username))
      password: ((docker.password))
  - name: bosh-release
    type: docker-image
    source:
      repository: dpb587/bosh-release-resource
      username: ((docker.username))
      password: ((docker.password))

resources:
  - name: terraform-cpi
    type: terraform
    tags: ((worker_tags))
    source:
      backend_type: s3
      backend_config:
        bucket: ((s3_openstack_cpi_pipeline_bucket_name))
        key: terraform/terraform.tfstate
        region: ((s3_openstack_cpi_pipeline_bucket_region))
        access_key: ((s3_openstack_cpi_pipeline_access_key))
        secret_key: ((s3_openstack_cpi_pipeline_secret_key))

  - name: bosh-cpi-dev-artifacts
    type: s3
    tags: ((worker_tags))
    source:
      regexp: bosh-openstack-cpi-([0-9.]+)\.tgz
      bucket: ((s3_openstack_cpi_pipeline_bucket_name)) # OpenStack CPI account
      region_name:        ((s3_openstack_cpi_pipeline_bucket_region))
      access_key_id:      ((s3_openstack_cpi_pipeline_access_key))
      secret_access_key:  ((s3_openstack_cpi_pipeline_secret_key))

  - name: lifecycle-log
    type: s3
    tags: ((worker_tags))
    source:
      bucket: ((s3_openstack_cpi_pipeline_bucket_name)) # OpenStack CPI account
      versioned_file: lifecycle.log
      region_name:        ((s3_openstack_cpi_pipeline_bucket_region))
      access_key_id:      ((s3_openstack_cpi_pipeline_access_key))
      secret_access_key:  ((s3_openstack_cpi_pipeline_secret_key))

  - name: bosh-cpi-src-in
    type: git
    tags: ((worker_tags))
    source:
      uri: https://github.com/cloudfoundry/bosh-openstack-cpi-release.git
      branch: master
      ignore_paths:
        - releases/bosh-openstack-cpi/**
        - .final_builds/**
        - docs/**
        - README.md

  - name: bosh-cpi-src-out
    type: git
    tags: ((worker_tags))
    source:
      uri: git@github.com:cloudfoundry/bosh-openstack-cpi-release.git
      branch: master
      private_key: ((github_deployment_key__bosh-openstack-cpi-release))

  - name: version-semver
    type: semver
    tags: ((worker_tags))
    source:
      key:                current-version
      bucket:             ((s3_openstack_cpi_pipeline_bucket_name))
      access_key_id:      ((s3_openstack_cpi_pipeline_access_key))
      secret_access_key:  ((s3_openstack_cpi_pipeline_secret_key))
      region_name:        ((s3_openstack_cpi_pipeline_bucket_region))

  - name: release-version-semver
    type: semver
    tags: ((worker_tags))
    source:
      initial_version: "35.0.0"
      driver: git
      uri: git@github.com:cloudfoundry/bosh-openstack-cpi-release.git
      branch: release-semver
      file: VERSION
      private_key: ((github_deployment_key__bosh-openstack-cpi-release))

  - name: bats
    type: git
    tags: ((worker_tags))
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

  - name: bosh-release
    type: bosh-io-release
    tags: ((worker_tags))
    source:
      repository: cloudfoundry/bosh

  - name: openstack-ubuntu-xenial-stemcell
    type: bosh-io-stemcell
    tags: ((worker_tags))
    source:
      name: bosh-openstack-kvm-ubuntu-xenial-go_agent

  - name: bosh-deployment
    type: git
    tags: ((worker_tags))
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment.git
      branch: master

  # - name: validator-src-in
  #   type: git
  #   tags: ((worker_tags))
  #   source:
  #     uri: https://github.com/cloudfoundry-incubator/cf-openstack-validator
  #     branch: master
